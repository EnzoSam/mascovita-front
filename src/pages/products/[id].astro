---
import type { Product } from '../../types';
import products from '../../data/products.json';

export async function getStaticPaths() {
  return products.map((product) => {
    return {
      params: { id: product.id.toString() },
      props: { product },
    };
  });
}

const { product } = Astro.props;
---

<div class="product-details">
  <img src={product.image} alt={product.name} class="product-image">
  <div class="product-info">
    <h1 class="product-title">{product.name}</h1>
    <p class="product-description">{product.description}</p>
    <p class="product-price">${product.price}</p>

    <div class="quantity-controls">
      <button id="decrease-quantity">-</button>
      <input type="number" id="quantity" value="1" min="1">
      <button id="increase-quantity">+</button>
    </div>

    <button  class="btn" id="add-to-cart" data-product-id={product.id}>Agregar al carrito</button>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const decreaseButton = document.getElementById('decrease-quantity');
    const increaseButton = document.getElementById('increase-quantity');
    const quantityInput = document.getElementById('quantity') as HTMLInputElement; // Especifica el tipo
    const addToCartButton = document.getElementById('add-to-cart');

    if (decreaseButton && increaseButton && quantityInput && addToCartButton) {
      decreaseButton.addEventListener('click', () => {
        if (quantityInput.value && parseInt(quantityInput.value) > 1) { // Agrega verificación de quantityInput.value
          quantityInput.value = (parseInt(quantityInput.value) - 1).toString();
        }
      });

      increaseButton.addEventListener('click', () => {
        if (quantityInput.value) {
          quantityInput.value = (parseInt(quantityInput.value) + 1).toString();
        }
      });

      addToCartButton.addEventListener('click', (event) => {
      const target = event.target as HTMLElement; // Especifica el tipo
      const productId = parseInt(target?.dataset?.productId + ''); // Obtiene el ID del producto
      const quantity = parseInt(quantityInput.value);
      console.log(`Producto ${productId} agregado al carrito con cantidad ${quantity}`);
    });
    } else {
      console.error('Uno o más elementos no se encontraron.');
    }
  });
</script>

<style>
  /* Estilos para la página de detalles del producto */
  .product-details {
    display: flex;
    align-items: flex-start;
    padding: 20px;
  }

  .product-image {
    max-width: 300px;
    margin-right: 20px;
  }

  .product-info {
    flex: 1;
  }

  .quantity-controls {
    display: flex;
    align-items: center;
    margin-bottom: 20px;
  }

  .quantity-controls button {
    padding: 5px 10px;
    font-size: 16px;
    cursor: pointer;
  }

  .quantity-controls input {
    width: 50px;
    padding: 5px;
    text-align: center;
    margin: 0 10px;
  }


</style>